// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projectA.Models;

#nullable disable

namespace projectA.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231018202303_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProfessorTurma", b =>
                {
                    b.Property<int>("ProfessorTurmasId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessoresId")
                        .HasColumnType("int");

                    b.HasKey("ProfessorTurmasId", "ProfessoresId");

                    b.HasIndex("ProfessoresId");

                    b.ToTable("ProfessorTurma");
                });

            modelBuilder.Entity("projectA.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pessoa");
                });

            modelBuilder.Entity("projectA.Models.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Sigla")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Turma");
                });

            modelBuilder.Entity("projectA.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("projectA.Models.Aluno", b =>
                {
                    b.HasBaseType("projectA.Models.Pessoa");

                    b.Property<string>("Matricula")
                        .HasColumnType("longtext");

                    b.Property<int?>("TurmaId")
                        .HasColumnType("int");

                    b.HasIndex("TurmaId");

                    b.HasDiscriminator().HasValue("Aluno");
                });

            modelBuilder.Entity("projectA.Models.Professor", b =>
                {
                    b.HasBaseType("projectA.Models.Pessoa");

                    b.Property<string>("Formacao")
                        .HasColumnType("longtext");

                    b.Property<double>("Salario")
                        .HasColumnType("double");

                    b.Property<string>("Siap")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Professor");
                });

            modelBuilder.Entity("ProfessorTurma", b =>
                {
                    b.HasOne("projectA.Models.Turma", null)
                        .WithMany()
                        .HasForeignKey("ProfessorTurmasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projectA.Models.Professor", null)
                        .WithMany()
                        .HasForeignKey("ProfessoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("projectA.Models.Aluno", b =>
                {
                    b.HasOne("projectA.Models.Turma", null)
                        .WithMany("Alunos")
                        .HasForeignKey("TurmaId");
                });

            modelBuilder.Entity("projectA.Models.Turma", b =>
                {
                    b.Navigation("Alunos");
                });
#pragma warning restore 612, 618
        }
    }
}
